========={ Arquitectura de capas de la mayor parte de archivos de mi proyecto }=========

capa de repositorios 
ü†ã

capas de persistencia en mongo y memoria presentes en DAO
ü†ã

capa de controladores
ü†ã

capa de routers
ü†ã

capa de renderizado
ü†ã



========={ Algunos patrones de dise√±o usados }=========

‚û§ DAO

‚û§ Factory

‚û§ DTO  

‚û§ Repository



========={ Carpetas principales dentro de src }=========

‚û§ config: Se encarga de la configuraci√≥n de dependencias, variables de entorno y otras cosas.

‚û§ controllers: Se tiene la l√≥gica principal de los m√©todos usando como apoyo tambi√©n m√©todos 
sacados de la capa de servicios o en la mayor√≠a de los m√©todos de esta capa usados en el proyecto
en sus respectivos archivos de l√≥gica para la persistencia elegida.

‚û§ dao: Muestra los DTO, los archivos de l√≥gica de persistencia, el archivo de la l√≥gica de factory y m√°s.

‚û§ docs: Donde se encuentra la documentaci√≥n de los m√©todos del router de productos y del de carritos

‚û§ logs: Donde se muestran los archivos que muestran los logs del c√≥digo

‚û§ rendered: Tiene las vistas y la l√≥gica de las vistas del lado del cliente.

‚û§ repositories: Se encarga de los m√©todos principales los cuales suelen usarse en la capa de servicios o en 
la mayor√≠a de los m√©todos de esta capa usados en el proyecto en sus respectivos archivos de l√≥gica para la 
persistencia elegida.

‚û§ routers: Se dividen en dos grandes grupos, los de la carpeta "api" que son los que tienen l√≥gica del lado del
backend y los de la carpeta "web" que tienen l√≥gica del lado del frontend y suelen renderizan vistas

‚û§ service: Esta carpeta se encarga de la capa de servicios, en este caso solo contiene un archivo llamado "ticket.service.js"
el cual tiene la capa de servicios del modelo de tickets (orden de compra)

‚û§ test: All√≠ se ejecutan los test de los routers de productos y carritos y de las sesiones



========={ Archivos principales del proyecto }=========

‚û§ .env: Donde se definen los argumentos de las variables de entorno

‚û§ app.js: El archivo principal y m√°s importante del proyecto

‚û§ errors.log: donde se vizualizan los errores y los mensajes de carga del proyecto

‚û§ utils.js: Donde se obtiene el dirname, que es fundamental para obtener la ruta completa de alg√∫n archivo

‚û§ .gitignore: Donde se definen las cosas que se ignorar√°n al subirse el proyecto a github

‚û§ Los archivos package.json y package-lock.json: Donde se ven las dependencias que se tienen instalas en el proyecto y m√°s

‚û§ README.md: La descripci√≥n principal de mi proyecto